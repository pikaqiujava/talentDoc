## filename=${context.classNamePascal}Controller.java, folder=controller
#set($controllerClass="${context.classNamePascal}Controller")
#set($serviceClass="${context.classNamePascal}Service")
#set($serviceObj="${context.classNameCamel}Service")
#set($entityClass="${context.classNamePascal}")
#set($entityObj="${context.classNameCamel}")
package ${context.packageName}.controller;

import com.talent.crows.common.response.ServerResponseEntity;
import com.talent.crows.common.util.BeanUtil;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import lombok.extern.slf4j.Slf4j;

import ${context.packageName}.vo.${entityClass}VO;
import ${context.packageName}.dto.${entityClass}DTO;
import ${context.packageName}.model.${entityClass};
import ${context.packageName}.service.${serviceClass};

@Slf4j
@RequestMapping("/a/${entityObj}")
@Tag(name = "app-${table.comment}Controller")
@RestController("app${controllerClass}")
public class ${controllerClass} {

    @Autowired
    private ${serviceClass} ${serviceObj};

    /**
     * 查询所有记录
     *
     * @return 返回集合，没有返回空List
     */
    @GetMapping("/list")
    @Operation(summary = "查询所有记录" , description = "查询所有记录")
    public ServerResponseEntity<List<${entityClass}VO>> listAll() {
        return ServerResponseEntity.success(${serviceObj}.listAll());
    }

    /**
     * 根据主键查询
     *
     * @param ${pk.javaFieldName} 主键
     * @return 返回记录，没有返回null
     */
    @GetMapping("/getById")
    @Operation(summary = "根据主键查询" , description = "根据主键查询")
    public ServerResponseEntity<${entityClass}VO> getById(${pk.javaTypeBox} ${pk.javaFieldName}) {
        return ServerResponseEntity.success(${serviceObj}.getById(${pk.javaFieldName}));
    }
     
    /**
     * 新增，忽略null字段
     *
     * @param ${entityObj}DTO 新增的记录
     * @return 返回影响行数
     */
    @PostMapping("/insert")
    @Operation(summary = "新增的记录" , description = "新增的记录")
    public ServerResponseEntity<Integer> insert(@RequestBody ${entityClass}DTO ${entityObj}DTO) {
    	${entityClass} ${entityObj} = BeanUtil.map(${entityObj}DTO, ${entityClass}.class);
        return ServerResponseEntity.success(${serviceObj}.insertIgnoreNull(${entityObj}));
    }    
      
    /**
     * 修改，忽略null字段
     *
     * @param ${entityObj}DTO 修改的记录
     * @return 返回影响行数
     */
    @PutMapping("/update")
    @Operation(summary = "修改的记录" , description = "修改的记录")
    public ServerResponseEntity<Integer> update(@RequestBody ${entityClass}DTO ${entityObj}DTO) {
    	${entityClass} ${entityObj} = BeanUtil.map(${entityObj}DTO, ${entityClass}.class);
        return ServerResponseEntity.success(${serviceObj}.updateIgnoreNull(${entityObj}));
    }
    
    /**
     * 删除记录
     *
     * @param ${entityObj}DTO 删除的记录
     * @return 返回影响行数
     */
    @DeleteMapping("/delete")
    @Operation(summary = "删除的记录" , description = "删除的记录")
    public ServerResponseEntity<Integer> delete(@RequestBody ${entityClass}DTO ${entityObj}DTO) {
    	${entityClass} ${entityObj} = BeanUtil.map(${entityObj}DTO, ${entityClass}.class);
        return ServerResponseEntity.success(${serviceObj}.delete(${entityObj}));
    }
    
}